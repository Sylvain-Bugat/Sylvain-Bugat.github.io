<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Batch cavern</title>
    <link>http://sylvain-bugat.github.io/post/</link>
    <description>Recent content in Posts on Batch cavern</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Apr 2015 23:12:21 +0200</lastBuildDate>
    <atom:link href="http://sylvain-bugat.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>8 queens puzzle introduction</title>
      <link>http://sylvain-bugat.github.io/blog/2015/04/28/8-queens-puzzle-introduction/</link>
      <pubDate>Tue, 28 Apr 2015 23:12:21 +0200</pubDate>
      
      <guid>http://sylvain-bugat.github.io/blog/2015/04/28/8-queens-puzzle-introduction/</guid>
      <description>

&lt;p&gt;This post is the first of a article series about the 8/N queens puzzle solving.&lt;/p&gt;

&lt;h2 id=&#34;introduction:2767292a573dc549b9b4297b701af3ab&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&#34;http://en.wikipedia.org/wiki/Eight_queens_puzzle&#34;&gt;8 queens on a chessboard&lt;/a&gt; is a classic puzzle which consists of placing 8 queens on a chessboard with only one queen on each row, column and diagonal, you can try it with this chessboard (errors are not visible yet):&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;board&#34; style=&#34;width: 400px&#34;&gt;&lt;/div&gt;
&lt;input type=&#34;button&#34; id=&#34;clearButton&#34; value=&#34;Clear chessboard&#34; /&gt;&lt;/p&gt;

&lt;script&gt;

var board = new ChessBoard(&#39;board&#39;, {
    draggable: true,
    dropOffBoard: &#39;trash&#39;,
    sparePieces: true,
    showNotation: false
});
$(&#39;#clearButton&#39;).on(&#39;click&#39;, board.clear);

&lt;/script&gt;

&lt;p&gt;This base Javascript is from &lt;a href=&#34;http://chessboardjs.com/&#34;&gt;chessboard.js.com&lt;/a&gt; (&lt;a href=&#34;https://github.com/oakmac/chessboardjs/&#34;&gt;GitHub link&lt;/a&gt;) under the &lt;a href=&#34;https://github.com/oakmac/chessboardjs/blob/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;.
Queen image is from &lt;a href=&#34;http://pixabay.com/en/chess-queen-meeple-white-game-36310/&#34;&gt;Pixabay&lt;/a&gt; under the &lt;a href=&#34;http://creativecommons.org/publicdomain/zero/1.0/deed&#34;&gt;CC0 Public Domain&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;extention-to-n-queens:2767292a573dc549b9b4297b701af3ab&#34;&gt;Extention to N queens&lt;/h3&gt;

&lt;p&gt;This puzzle can be extended to N queens on a N x N chessboard and a higher value of N increase needed operations to find all solutions.&lt;/p&gt;

&lt;p&gt;All implemented algorithm in this series of posts can count solutions on a chessboard of size N.&lt;/p&gt;

&lt;h3 id=&#34;solutions-of-the-puzzle:2767292a573dc549b9b4297b701af3ab&#34;&gt;Solutions of the puzzle&lt;/h3&gt;

&lt;p&gt;Known number of solutions for N from 1 to 26 are:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;N&lt;/th&gt;
&lt;th&gt;number of solutions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;92&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;352&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;724&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;2 680&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;14 200&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;73 712&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;365 596&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;2 279 184&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;14 772 512&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;95 815 104&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;666 090 624&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;4 968 057 848&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;39 029 188 884&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;314 666 222 712&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;2 691 008 701 644&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;24 233 937 684 440&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;227 514 171 973 736&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;2 207 893 435 808 352&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;22 317 699 616 364 044&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Source: sequence &lt;a href=&#34;http://oeis.org/A000170&#34;&gt;A000170&lt;/a&gt; on &lt;a href=&#34;http://oeis.org/&#34;&gt;OEIS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On a classic chessboard there is 92 distinct solutions.&lt;/p&gt;

&lt;h2 id=&#34;resolve-the-puzzle:2767292a573dc549b9b4297b701af3ab&#34;&gt;Resolve the puzzle&lt;/h2&gt;

&lt;p&gt;This puzzle can be solved with various algorithms. It is quite easy to resolve when N is low and it is a good pratice for testing various algorithms and optimisations.&lt;/p&gt;

&lt;p&gt;Next posts of this series will explain brute-force and back-tracking algorithms and possible optimisations with some benchmarks to compare. Algorithms will be implemented in &lt;strong&gt;Java&lt;/strong&gt; and all shown code and algorithms are on this &lt;a href=&#34;https://github.com/Sylvain-Bugat/N-queens-puzzle-solvers&#34;&gt;GitHub project&lt;/a&gt; and are under the &lt;a href=&#34;https://github.com/Sylvain-Bugat/N-queens-puzzle-solvers/blob/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;why-implementations-are-in-java:2767292a573dc549b9b4297b701af3ab&#34;&gt;Why implementations are in Java?&lt;/h3&gt;

&lt;p&gt;Java is my main programming language and is very popular.&lt;/p&gt;

&lt;p&gt;Because of the Java runtime machine (JVM) overhead, Java programs can be slower than assembler/compiled languages(C, C++, Go, &amp;hellip;) programs for CPU-bound programs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But a fast Java program is faster than a slow assembler/C program because of algorithm optimisations.&lt;/strong&gt;
Nevertheless a same algortihm implemented in Java and in a optimized compiled language should be executed a faster by the compiled language program in most cases.&lt;/p&gt;

&lt;h3 id=&#34;benchmarks:2767292a573dc549b9b4297b701af3ab&#34;&gt;Benchmarks&lt;/h3&gt;

&lt;p&gt;Benchmarks will be implemented in Java with multiple runs of the same algorithms with the fastest and the slowest runs discarding.&lt;/p&gt;

&lt;p&gt;To compare diferent benchmarks, they need to be run on the same computer at the same time (sequentially), that will be the case in theses posts.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blog creation with Hugo</title>
      <link>http://sylvain-bugat.github.io/blog/2015/04/26/blog-creation-with-hugo/</link>
      <pubDate>Sun, 26 Apr 2015 19:05:20 +0200</pubDate>
      
      <guid>http://sylvain-bugat.github.io/blog/2015/04/26/blog-creation-with-hugo/</guid>
      <description>

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; is a nice and fast blog (or static sites) creation tools written in &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;installation:370c8eac8167efd517bb2a591c622965&#34;&gt;Installation&lt;/h1&gt;

&lt;p&gt;The installation of Hugo is very simple, you just have to download the package/executable from the &lt;a href=&#34;https://github.com/spf13/hugo/releases/latest&#34;&gt;GitHub lastest release page&lt;/a&gt; and install it or copy it in a directory accessible with the &lt;code&gt;PATH&lt;/code&gt; variable.&lt;/p&gt;

&lt;h3 id=&#34;debian-raspbian:370c8eac8167efd517bb2a591c622965&#34;&gt;Debian/Raspbian&lt;/h3&gt;

&lt;p&gt;On Debian (and Raspbian), &lt;code&gt;deb&lt;/code&gt; packages are available to download for i386, amd64 and armhf. .deb packages are very simple to install with &lt;code&gt;dpkg&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Example on Raspbian (Raspberry PI B model) ARM Linux (&lt;strong&gt;take the lastest version if a more recent version is available!&lt;/strong&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://github.com/spf13/hugo/releases/download/v0.13/hugo_0.13_armhf.deb
sudo dpkg -i hugo_0.13_armhf.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And it&amp;rsquo;s done, just type &lt;code&gt;hugo version&lt;/code&gt; to test the installation.&lt;/p&gt;

&lt;h3 id=&#34;raw-executable:370c8eac8167efd517bb2a591c622965&#34;&gt;Raw executable&lt;/h3&gt;

&lt;p&gt;On other x64 Linux/UNIX (&lt;strong&gt;take the lastest version if a more recent version is available!&lt;/strong&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#get the hugo tarball
wget https://github.com/spf13/hugo/releases/download/v0.13/hugo_0.13_linux_amd64.tar.gz
tar -xzvf hugo_0.13_linux_amd64.tar.gz

#You can copy the hugo binary somewhere else before adding it to the PATH
cd hugo_0.13_linux_amd64
#A symbolic link or an alias can be defined to use directly hugo by typing &amp;quot;hugo&amp;quot; instead of &amp;quot;hugo_0.13_linux_amd64&amp;quot;
ln -s ln -s hugo_0.13_linux_amd64 hugo
#Temporary PATH export to test only the executable from anywhere
export PATH=&amp;quot;${PATH}:${PWD}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And it&amp;rsquo;s done, just type &lt;code&gt;hugo version&lt;/code&gt; to test the installation. You can customize the user account profile to automatically set the &lt;code&gt;PATH&lt;/code&gt; variable.&lt;/p&gt;

&lt;h1 id=&#34;initialize-a-new-site:370c8eac8167efd517bb2a591c622965&#34;&gt;Initialize a new site&lt;/h1&gt;

&lt;p&gt;You can look at the official &lt;a href=&#34;http://gohugo.io/overview/quickstart/&#34;&gt;Hugo quickstart video&lt;/a&gt; to have another example.&lt;/p&gt;

&lt;h3 id=&#34;create-the-site-directories:370c8eac8167efd517bb2a591c622965&#34;&gt;Create the site directories&lt;/h3&gt;

&lt;p&gt;Into the target empty directory use the &lt;code&gt;hugo&lt;/code&gt; command with &lt;code&gt;new site .&lt;/code&gt; arguments to create all&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new site .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The created files and directories are:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;archetypes
config.toml
content
data
layouts
static
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;config.toml&lt;/code&gt; file is the main configuration file and the &lt;code&gt;content&lt;/code&gt; directory will contain site pages.&lt;/p&gt;

&lt;h3 id=&#34;installing-a-theme:370c8eac8167efd517bb2a591c622965&#34;&gt;Installing a theme&lt;/h3&gt;

&lt;p&gt;A least one theme is required to skin the site. Available themes are listed on this dedicated &lt;a href=&#34;https://github.com/spf13/hugoThemes&#34;&gt;GitHub project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;By using the &lt;code&gt;git&lt;/code&gt; command the [hugo base theme] can be get from the site main directory:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p themes
cd themes
git clone https://github.com/crakjie/hugo-base-theme.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you don&amp;rsquo;t have git installed, just download &lt;a href=&#34;https://github.com/crakjie/hugo-base-theme/archive/master.zip&#34;&gt;the zip archive&lt;/a&gt; from this theme repository and unzip it in your themes sub-directory.&lt;/p&gt;

&lt;h3 id=&#34;installing-all-themes:370c8eac8167efd517bb2a591c622965&#34;&gt;Installing all themes&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s possible to install all themes at once with the &lt;code&gt;git&lt;/code&gt; command from the site main directory:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --recursive https://github.com/spf13/hugoThemes.git themes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All themes can be tested to see which one do you prefer. &lt;strong&gt;Note: some seems partially or totally broken due to Hugo updates?&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;configure-the-site:370c8eac8167efd517bb2a591c622965&#34;&gt;Configure the site&lt;/h3&gt;

&lt;p&gt;The sample configuration file contains:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;baseurl = &amp;quot;http://yourSiteHere/&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
title = &amp;quot;My New Hugo Site&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To configure the installed theme, just add this line:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;theme=&amp;quot;hugo-base-theme&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Other parameters can be modified as you wish.&lt;/p&gt;

&lt;h3 id=&#34;creating-a-blog-post:370c8eac8167efd517bb2a591c622965&#34;&gt;Creating a blog post&lt;/h3&gt;

&lt;p&gt;From the&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new post/test.md 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command will create a &lt;code&gt;test.md&lt;/code&gt; file into the &lt;code&gt;content/post&lt;/code&gt; directory with some header fields:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+++
date = &amp;quot;2015-04-29T23:10:31+02:00&amp;quot;
title = &amp;quot;test&amp;quot;
weight = 5

[menu]
  [menu.main]
    parent = &amp;quot;x&amp;quot;

+++
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can write a test content like &lt;strong&gt;Your skill is great!&lt;/strong&gt; after this header.&lt;/p&gt;

&lt;h1 id=&#34;test-the-new-site:370c8eac8167efd517bb2a591c622965&#34;&gt;Test the new site&lt;/h1&gt;

&lt;p&gt;Now test the site with this command, &lt;strong&gt;let&amp;rsquo;s rock&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The default server URL is &lt;a href=&#34;http://localhost:1313/&#34;&gt;http://localhost:1313/&lt;/a&gt; and the site must be displayed on your browser.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>